{
    "app_title": "Server Control Panel",
    "main_menu_title": "Main Menu",
    "main_menu_prompt": "What would you like to do?",
    "goodbye": "Goodbye!",
    "critical_error": "A critical error occurred: {error}",
    "root_warning": "Running without root privileges. Some features may not work correctly.",
    "back_to_menu": "Back to menu",
    "back_to_main_menu": "Back to main menu",
    "press_any_key": "Press any key to continue...",
    "operation_cancelled": "Operation cancelled.",

    "menu_health_check": "System Health Check",
    "menu_service_manager": "System Service Manager",
    "menu_docker_manager": "Docker Container Manager",
    "menu_software_manager": "Software Manager",
    "menu_monitor": "System Monitor (htop-like)",
    "menu_security_audit": "Security & Network Audit",
    "menu_dev_tools": "Developer Tools",
    "menu_cron_manager": "Cron Job Manager",
    "menu_log_viewer": "Advanced Log Viewer",
    "menu_package_manager": "Package Manager (APT)",
    "menu_firewall_manager": "Firewall Manager",
    "menu_user_manager": "User Manager",
    "menu_network_info": "Network Toolkit",
    "menu_pm2_manager": "PM2 Process Manager",
    "menu_web_server_manager": "Web Server Manager",
    "menu_exit": "Exit",
    "menu_check_updates": "Check for Updates",

    "updater_title": "Updater",
    "updater_checking": "Checking for updates...",
    "updater_error": "Could not get remote version info.",
    "updater_up_to_date": "You are on the latest version.",
    "updater_new_version_found": "New version available: {new_version}",
    "updater_prompt_update": "Do you want to update now?",
    "updater_updating": "Updating...",
    "updater_success": "Update successful! Please restart the script.",
    "updater_failed": "Update failed. Please try again later.",
    "updater_git_pull_failed": "git pull failed. If you have local changes, please stash them first.",

    "health_title": "System Health Check",
    "health_menu_check_updates": "Check for APT Updates",
    "health_menu_cleanup": "Perform System Cleanup (autoremove & clean)",
    "health_menu_back": "Back to Main Menu",
    "health_checking_updates": "Checking for available package updates...",
    "health_update_failed": "Failed to check for updates.",
    "health_no_updates": "Your system is up-to-date. No updates available.",
    "health_updates_found": "{count} packages can be upgraded.",
    "health_updates_list": "List of upgradable packages:",
    "health_prompt_upgrade": "Do you want to run 'apt upgrade' now?",
    "health_starting_upgrade": "Starting package upgrade... (This may take a while)",
    "health_upgrade_complete": "Package upgrade complete.",
    "health_cleanup_prompt": "This will remove unused packages and clean the local repository. Are you sure?",
    "health_running_autoremove": "Running 'apt-get autoremove' to free up space...",
    "health_autoremove_complete": "Autoremove finished.",
    "health_running_clean": "Running 'apt-get clean' to clear out the local repository...",
    "health_clean_complete": "Clean finished.",
    "health_cleanup_finished": "System cleanup finished successfully.",

    "services_title": "System Service Manager",
    "services_prompt_manage": "Which service to manage?",
    "services_not_installed": "{service_name} not installed.",
    "services_prompt_install": "Install now?",
    "services_status_unknown": "Unknown",
    "services_status_active": "Active",
    "services_status_inactive": "Inactive",
    "services_title_managing": "Managing: {service_name} | Status: {status}",
    "services_prompt_action": "Action:",
    "services_action_start": "Start",
    "services_action_stop": "Stop",
    "services_action_restart": "Restart",
    "services_action_enable": "Enable on Boot",
    "services_action_disable": "Disable on Boot",

    "docker_title": "Docker Container Manager",
    "docker_not_installed": "Docker is not installed.",
    "docker_install_prompt": "Would you like to install Docker now?",
    "docker_installing": "Installing Docker...",
    "docker_install_success": "Docker installed successfully.",
    "docker_install_failed": "Docker installation failed.",
    "docker_menu_list_all": "List All Containers",
    "docker_menu_list_running": "List Running Containers",
    "docker_menu_manage_container": "Manage a Container",
    "docker_menu_prune": "Prune System (images, containers, networks)",
    "docker_no_containers": "No containers found.",
    "docker_select_container": "Select a container to manage:",
    "docker_managing_container": "Managing container: {name} ({id})",
    "docker_action_start": "Start",
    "docker_action_stop": "Stop",
    "docker_action_restart": "Restart",
    "docker_action_logs": "View Logs",
    "docker_action_remove": "Remove",
    "docker_confirm_remove": "Are you sure you want to remove this container?",
    "docker_prune_confirm": "This will remove all stopped containers, unused networks, and dangling images. Are you sure?",
    "docker_pruning": "Pruning Docker system...",

    "monitor_htop_title": "System Monitor",
    "monitor_htop_exit": "Press q or Ctrl+C to exit",
    "monitor_cpu_panel": "CPU",
    "monitor_ram_panel": "Memory",
    "monitor_disk_panel": "Disk",

    "security_title": "Security & Network Audit",
    "security_menu_fail2ban": "Manage Fail2Ban",
    "security_menu_netstat": "Show Network Connections (netstat)",
    "security_menu_back": "Back",
    "fail2ban_not_installed": "Fail2Ban is not installed.",
    "fail2ban_install_prompt": "Would you like to install Fail2Ban now?",
    "fail2ban_title": "Fail2Ban Management",
    "fail2ban_menu_status": "View Status and Jails",
    "fail2ban_menu_unban": "Unban an IP",
    "fail2ban_prompt_jail": "Enter the jail name:",
    "fail2ban_prompt_ip": "Enter the IP to unban:",

    "devtools_title": "Developer Tools",
    "devtools_prompt_select": "Select a tool to manage:",
    "devtools_menu_mysql": "MySQL Manager",
    "devtools_menu_back": "Back",
    "mysql_manager_title": "MySQL Management",
    "mysql_prompt_action": "What would you like to do?",
    "mysql_menu_install": "Install MySQL Server",
    "mysql_menu_status": "Check MySQL Status",
    "mysql_menu_secure": "Run Secure Installation",
    "mysql_menu_uninstall": "Uninstall MySQL",
    "mysql_not_installed": "MySQL is not installed.",
    "mysql_installing": "Installing MySQL Server...",
    "mysql_install_finished": "MySQL Server has been installed.",
    "mysql_info_run_secure": "It is highly recommended to run the 'Secure Installation' script now.",
    "mysql_status_checking": "Checking MySQL service status...",
    "mysql_secure_starting": "Starting the interactive secure installation script...",
    "mysql_secure_manual_follow": "Please follow the on-screen prompts.",
    "mysql_secure_finished": "Secure installation process finished.",
    "mysql_uninstall_confirm": "Are you sure you want to completely uninstall MySQL and delete all data?",
    "mysql_uninstalling": "Completely uninstalling MySQL...",
    "mysql_uninstall_finished": "MySQL has been uninstalled.",

    "cron_title": "Cron Job Manager",
    "cron_no_jobs": "No cron jobs found for user {user}.",
    "cron_menu_list": "List Cron Jobs",
    "cron_menu_add": "Add New Cron Job",
    "cron_menu_edit": "Edit a Cron Job",
    "cron_menu_remove": "Remove a Cron Job",
    "cron_prompt_command": "Enter the command for the cron job:",
    "cron_prompt_schedule": "Enter the schedule (e.g., '*/5 * * * *' for every 5 minutes):",
    "cron_select_job_edit": "Select a cron job to edit:",
    "cron_select_job_remove": "Select a cron job to remove:",

    "logs_title": "Advanced Log Viewer",
    "logs_menu_journalctl": "View Systemd Journal (journalctl)",
    "logs_menu_custom": "View Custom Log File",
    "logs_prompt_service": "Enter service name to filter by (e.g., sshd), or leave blank:",
    "logs_prompt_path": "Enter full path to log file:",
    "logs_viewing": "Displaying logs for {target}. Press Ctrl+C to stop.",

    "packages_title": "Package Manager (APT)",
    "packages_menu_install": "Install a package",
    "packages_menu_remove": "Remove a package",
    "packages_menu_search": "Search for a package",
    "packages_prompt_name": "Enter package name:",
    "packages_installing": "Installing {package}...",
    "packages_removing": "Removing {package}...",
    "packages_searching": "Searching for {package}...",

    "firewall_title": "Firewall Manager",
    "firewall_no_tool": "No supported firewall tool (UFW or iptables) found.",
    "firewall_select_tool": "Select firewall tool to manage:",
    "ufw_title": "UFW Manager",
    "ufw_not_installed": "UFW is not installed.",
    "ufw_install_prompt": "Would you like to install UFW?",
    "ufw_status": "Status: {status}",
    "ufw_menu_status": "View Status and Rules",
    "ufw_menu_enable": "Enable UFW",
    "ufw_menu_disable": "Disable UFW",
    "ufw_menu_add_rule": "Add a Rule",
    "ufw_menu_delete_rule": "Delete a Rule",
    "ufw_rule_prompt_port": "Enter port/service:",
    "ufw_rule_prompt_policy": "Policy:",
    "ufw_rule_prompt_proto": "Protocol:",
    "iptables_title": "iptables Rules (Read-Only)",
    "iptables_readonly": "Managing iptables is not supported via this interface due to its complexity.",

    "users_title": "User Manager",
    "users_menu_list": "List Users",
    "users_menu_add": "Add User",
    "users_menu_delete": "Delete User",
    "users_prompt_username": "Enter username:",
    "users_prompt_password": "Set password for user?",
    "users_confirm_delete": "Are you sure you want to delete user {username}?",
    "users_delete_home": "Also delete home directory for {username}?",

    "network_title": "Network Toolkit",
    "network_menu_info": "Show Network Info (ip addr)",
    "network_menu_ping": "Ping a Host",
    "network_menu_wireguard": "Manage WireGuard",
    "network_prompt_host": "Enter host to ping (e.g., 8.8.8.8):",
    "wireguard_title": "WireGuard Manager",
    "wireguard_not_installed": "WireGuard tools are not installed.",
    "wireguard_install_prompt": "Would you like to install WireGuard?",
    "wireguard_no_interfaces": "No WireGuard interfaces found.",
    "wireguard_select_interface": "Select a WireGuard interface:",
    "wireguard_menu_list_clients": "List Clients",
    "wireguard_menu_view_client_config": "View Client Config / QR Code",
    "wireguard_no_peers": "No clients (peers) found for this interface.",
    "wireguard_select_client": "Select a client:",

    "pm2_not_installed": "PM2 is not installed.",
    "pm2_install_prompt": "PM2 is required. Install it now?",
    "pm2_title": "PM2 Process Manager",
    "pm2_menu_list": "List all processes",
    "pm2_menu_logs": "View logs for a process",
    "pm2_menu_restart": "Restart a process",
    "pm2_menu_stop": "Stop a process",
    "pm2_menu_delete": "Delete a process",
    "pm2_select_process": "Select a process:",

    "software_manager_title": "Software Manager",
    "software_manager_prompt": "Select software to manage",
    "software_manager_installed": "Installed",
    "software_manager_not_installed": "Not Installed",
    "software_manager_version_unknown": "Unknown Version",
    "software_manager_version_collecting": "Collecting software versions...",
    "software_manager_install": "Install",
    "software_manager_manage": "Manage",
    "software_manager_uninstall": "Uninstall",
    "software_manager_uninstall_confirm": "Are you sure you want to completely remove {package_name} and its configuration?",

    "installing_tool": "Installing {tool}",
    "tool_installed_successfully": "{tool} installed successfully.",
    "tool_installation_failed": "{tool} installation failed: {error}",
    
    "web_server_manager_title": "Web Server Manager (Nginx)",
    "nginx_not_installed": "Nginx does not appear to be installed.",
    "install_nginx_prompt": "Would you like to try and install Nginx now?",
    "web_server_menu_prompt": "What would you like to do?",
    "web_server_create_site": "Create a new website",
    "create_new_site_title": "Creating a new website",
    "enter_domain_name": "Please enter the domain name (e.g., example.com):",
    "creating_web_root": "Creating web root directory at {path}...",
    "directory_created_successfully": "Directory created successfully.",
    "error_creating_directory": "Error creating directory: {error}",
    "creating_nginx_config": "Creating Nginx config at {path}...",
    "nginx_config_created": "Nginx config created and site enabled.",
    "error_creating_nginx_config": "Error creating Nginx config: {error}",
    "testing_nginx_config": "Testing Nginx configuration...",
    "reloading_nginx": "Reloading Nginx...",
    "site_created_successfully": "Site {domain} created successfully!",
    "error_reloading_nginx": "Error testing or reloading Nginx: {error}",
    "nginx_reload_failed_cleanup_prompt": "Nginx configuration test failed. Would you like to remove the created files?",
    "cleanup_complete": "Cleanup complete.",

    "certbot_nginx_required": "Certbot management requires Nginx to be installed.",
    "certbot_menu_get_cert": "Get a new certificate (using Nginx plugin)",
    "certbot_menu_test_renewal": "Test automatic renewal",
    "certbot_get_cert_instructions": "Launching Certbot. Please follow the interactive prompts to select your domain and configure HTTPS.",
    "certbot_testing_renewal": "Performing a dry run of the renewal process",
    "certbot_menu_list_certs": "List existing certificates",
    "certbot_listing_certs": "Fetching list of certificates",

    "nginx_menu_list_sites": "List configured sites",
    "nginx_listing_sites": "Listing enabled sites",
    "nginx_no_sites_found": "No enabled sites found.",
    "error_listing_sites": "Error listing sites: {error}",
    "nginx_sites_enabled_not_found": "Directory not found: {path}",

    "java_installer_title": "Java (OpenJDK) Installer",
    "java_prompt_which_version": "Which version of Java do you want to install?",
    "java_menu_cancel": "Cancel",
    "java_installing": "Installing {choice}",
    "java_install_finished": "Installation of {choice} finished.",
    "java_manage_version_info": "To manage multiple Java versions, use the command:",

    "pma_installer_title": "PHPMyAdmin Installer (for Nginx)",
    "pma_error_deps_met": "Error: Dependencies not met.",
    "pma_error_no_nginx": "- Nginx is not installed or not in PATH.",
    "pma_error_no_php": "- PHP-FPM is not installed or not in PATH.",
    "pma_error_deps_instructions": "Please install and configure Nginx and PHP-FPM before running this installer.",
    "pma_prompt_confirm_install": "This script will install PHPMyAdmin and its PHP dependencies. Continue?",
    "pma_installing": "Installing phpmyadmin and dependencies ({php_deps})...",
    "pma_install_finished": "PHPMyAdmin has been installed.",
    "pma_info_configure_nginx": "Now, you need to configure Nginx.",
    "pma_info_creating_symlink": "Creating a symbolic link: sudo ln -s {pma_path} {symlink_path}",
    "pma_info_action_required": "ACTION REQUIRED: Add the following to your Nginx server block:",
    "pma_nginx_config_title": "Example Nginx Config",
    "pma_info_reload_nginx": "Remember to reload or restart Nginx to apply the changes: sudo systemctl reload nginx",

    "monitor_live_title": "Live System Monitor",
    "monitor_advanced_title": "Advanced System Monitor",
    "monitor_exit_message": "Press Ctrl+C to exit",
    "monitor_cpu_panel": "CPU Usage",
    "monitor_ram_panel": "RAM Usage",
    "monitor_disk_panel": "Disk Usage ({path})",
    "monitor_uptime_panel": "Uptime",
    "monitor_top_cpu_table": "Top Processes by CPU",
    "monitor_top_mem_table": "Top Processes by Memory",
    "monitor_col_pid": "PID",
    "monitor_col_user": "User",
    "monitor_col_cpu": "CPU %",
    "monitor_col_mem": "MEM %",
    "monitor_col_command": "Command",
    "monitor_top_cpu": "Top Processes by CPU",
    "monitor_top_mem": "Top Processes by RAM",
    "monitor_disk_title": "Disk Usage",
    "monitor_disk_total": "Total",
    "monitor_disk_used": "Used",
    "monitor_ram_title": "RAM Usage",
    "monitor_ram_total": "Total",
    "monitor_ram_used": "Used",
    "monitor_cpu_title": "CPU Load",
    "monitor_col_pid": "PID",
    "monitor_col_name": "Name",
    "monitor_col_cpu": "CPU%",
    "monitor_col_mem": "MEM%",
    "monitor_mem_disk_title": "Memory & Disk",
    "monitor_process_list": "Process List",
    "monitor_sort_menu": "Sort by:",
    "monitor_sort_cpu": "CPU %",

    "security_prompt": "What would you like to check?",
    "security_menu_fail2ban": "Fail2Ban Status",
    "security_menu_ports": "Listening Network Ports (ss)",
    "security_menu_lynis": "Run Lynis Security Audit",
    "security_menu_back": "Back to Main Menu",
    
    "fail2ban_title": "Fail2Ban Status",
    "fail2ban_checking": "Checking Fail2Ban status...",
    "fail2ban_active": "Fail2Ban service is active.",
    "fail2ban_inactive": "Fail2Ban service is not running or not installed.",
    "fail2ban_no_jails": "No active jails found or could not parse status.",
    "fail2ban_table_title": "Fail2Ban Jails",
    "fail2ban_col_jail": "Jail",
    "fail2ban_col_banned": "Banned IPs",

    "ports_title": "Listening Network Ports",
    "ports_fetching": "Fetching listening ports with 'ss'...",
    "ports_table_title": "Listening Ports (ss -tulpn)",
    "ports_col_proto": "Proto",
    "ports_col_recv": "Recv-Q",
    "ports_col_send": "Send-Q",
    "ports_col_local": "Local Address:Port",
    "ports_col_peer": "Peer Address:Port",
    "ports_col_user": "User",
    "ports_col_program": "PID/Program",

    "lynis_title": "Lynis Security Audit",
    "lynis_checking": "Checking if Lynis is installed...",
    "lynis_not_installed": "Lynis is not installed. Do you want to install it now?",
    "lynis_installing": "Installing Lynis...",
    "lynis_install_complete": "Lynis installation complete.",
    "lynis_running_audit": "Running Lynis audit... (This can take several minutes)",
    "lynis_results_title": "Lynis Audit Results",
    "lynis_warnings_table": "Lynis Warnings",
    "lynis_suggestions_table": "Lynis Suggestions",
    "lynis_col_id": "ID",
    "lynis_col_details": "Details",

    "security_menu_quick": "Quick Checks",
    "security_menu_deep": "Deep Audit (Lynis)",
    "security_menu_network": "Network Audit",

    "quick_check_title": "Quick Security Checks",
    "quick_check_ssh": "Check SSH Configuration",
    "quick_check_passwords": "Check for Users with Empty Passwords",
    "quick_check_permissions": "Check Critical File Permissions",
    
    "ssh_check_title": "SSH Configuration Check",
    "ssh_check_secure": "Secure",
    "ssh_check_insecure": "INSECURE",
    "ssh_check_root_login": "Permit Root Login",
    "ssh_check_pass_auth": "Password Authentication",
    "ssh_recommendation": "Recommendation: Use key-based authentication only.",

    "empty_pass_title": "Empty Password Check",
    "empty_pass_found": "Found users with empty passwords. This is a critical vulnerability.",
    "empty_pass_not_found": "No users with empty passwords found.",
    "empty_pass_col_user": "User",

    "permissions_title": "Critical File Permissions Check",
    "permissions_col_file": "File",
    "permissions_col_expected": "Expected",
    "permissions_col_actual": "Actual",
    "permissions_col_status": "Status",
    "permissions_status_ok": "OK",
    "permissions_status_warning": "WARNING",

    "docker_title": "Docker Manager",
    "docker_error_client": "Could not connect to Docker daemon. Is it running?",
    "docker_prompt_main": "What would you like to do?",
    "docker_menu_stats": "Live Container Stats",
    "docker_menu_manage_containers": "Manage All Containers",
    "docker_menu_manage_images": "Manage Images",
    "docker_menu_manage_volumes": "Manage Volumes",
    "docker_menu_manage_networks": "Manage Networks",
    "docker_menu_prune": "Prune System",
    "docker_menu_back": "Back to Main Menu",
    "docker_press_enter": "Press Enter to continue...",

    "docker_prune_confirm": "This will remove all unused Docker images. Are you sure?",
    "docker_prune_success": "Docker prune successful.",
    "docker_prune_reclaimed": "Space reclaimed: {space} MB",
    "docker_prune_error": "Error during Docker prune: {error}",

    "docker_menu_manage_compose": "Manage Docker Compose",
    "docker_compose_prompt_path": "Enter the path to the Docker Compose project directory:",
    "docker_compose_invalid_path": "Invalid path. Please enter a valid directory.",
    "docker_compose_not_found": "docker-compose.yml not found in {path}",
    "docker_compose_managing_title": "Managing Compose project at: {path}",
    "docker_compose_menu_up": "Up (start services)",
    "docker_compose_menu_down": "Down (stop services)",
    "docker_compose_menu_ps": "Status (ps)",
    "docker_compose_menu_logs": "Logs",
    "docker_compose_menu_back": "Back to Docker Menu",

    "docker_containers_prompt": "Select a container to manage:",
    "docker_containers_error_list": "Failed to list containers: {error}",
    "docker_action_prompt": "Action for [{color}]{name}[/] ([{color}]{status}[/])",
    "docker_action_logs": "View Logs",
    "docker_action_inspect": "Inspect",
    "docker_action_start": "Start",
    "docker_action_stop": "Stop",
    "docker_action_restart": "Restart",
    "docker_action_remove": "Remove",
    "docker_action_back": "Back",
    "docker_container_started": "Container {name} started.",
    "docker_container_stopped": "Container {name} stopped.",
    "docker_container_restarted": "Container {name} restarted.",
    "docker_container_removed": "Container {name} removed.",
    "docker_container_remove_confirm": "Are you sure you want to remove container {name}?",
    "docker_error_api": "Error: {error}",

    "docker_logs_error_driver": "Error: The logging driver for this container does not support log reading.",
    "docker_logs_error_check_system": "Check logs via the configured system (e.g., syslog, journalctl).",
    "docker_logs_error_api": "An API error occurred: {error}",
    "docker_logs_returning": "Returning to Docker menu...",
    "docker_logs_error_unexpected": "An unexpected error occurred: {error}",
    "docker_logs_press_enter": "Press Enter to return to the menu.",

    "docker_inspect_title": "Details for {name}",
    "docker_stats_title": "Live Container Stats",
    "docker_stats_col_name": "Name",
    "docker_stats_col_id": "ID",
    "docker_stats_col_status": "Status",
    "docker_stats_col_cpu": "CPU %",
    "docker_stats_col_mem": "Memory",
    "docker_stats_col_pids": "PIDs",

    "docker_images_title": "Image Management",
    "docker_images_prompt": "Select an image to manage:",
    "docker_images_col_id": "Image ID",
    "docker_images_col_tags": "Tags",
    "docker_images_col_size": "Size",
    "docker_image_action_prompt": "Action for image {tags}:",
    "docker_image_action_remove": "Remove Image",
    "docker_image_action_pull": "Pull New Image",
    "docker_image_remove_confirm": "Are you sure you want to remove this image? This may affect containers using it.",
    "docker_image_removed": "Image {id} removed.",
    "docker_image_pull_prompt": "Enter the name of the image to pull (e.g., 'ubuntu:latest'):",
    "docker_image_pulling": "Pulling image {name}...",
    "docker_image_pull_success": "Successfully pulled {name}.",
    "docker_image_pull_error": "Error pulling image: {error}",
    "docker_col_id": "Image ID",
    "docker_col_tags": "Tags",
    "docker_col_size": "Size",
    "docker_no_images": "No local images found.",
    "docker_tag_none": "<none>",
    "docker_error_listing_images": "Error listing images: {error}",

    "docker_images_not_implemented": "Image management is not yet implemented.",

    "cron_title": "Cron Job Manager",
    "cron_error_permission": "Permission denied. Please run this script with sudo to manage cron jobs.",
    "cron_current_jobs": "Current Cron Jobs for user: {user}",
    "cron_no_jobs": "No cron jobs found for this user.",
    "cron_prompt_action": "What would you like to do?",
    "cron_menu_list": "List Jobs",
    "cron_menu_add": "Add New Job",
    "cron_menu_remove": "Remove a Job",
    "cron_menu_back": "Back",
    "cron_col_schedule": "Schedule",
    "cron_col_command": "Command",
    "cron_col_comment": "Comment",
    "cron_add_title": "Add a New Cron Job",
    "cron_add_prompt_command": "Enter the command to execute:",
    "cron_add_prompt_schedule": "Enter the schedule (e.g., '*/5 * * * *' for every 5 mins):",
    "cron_add_prompt_comment": "Enter a comment (optional):",
    "cron_add_success": "Cron job added successfully.",
    "cron_remove_prompt": "Select a job to remove:",
    "cron_remove_confirm": "Are you sure you want to remove this job?",
    "cron_remove_success": "Cron job removed successfully.",

    "packages_title": "Package Manager (APT)",
    "packages_listing_status": "Getting package list...",
    "packages_list_title": "Installed Packages",
    "packages_col_name": "Package Name",
    "packages_col_version": "Version",
    "packages_action_prompt": "Select an action:",
    "packages_menu_list": "List all packages",
    "packages_menu_update": "Update package lists (apt update)",
    "packages_menu_upgrade": "Upgrade all packages (apt upgrade)",
    "packages_menu_autoremove": "Clean up system (apt autoremove)",
    "packages_update_running": "Running 'apt update'...",
    "packages_update_success": "Package lists updated successfully.",
    "packages_update_error": "Error updating package lists.",
    "packages_upgrade_confirm": "Are you sure you want to upgrade all packages?",
    "packages_upgrade_running": "Running 'apt upgrade'...",
    "packages_upgrade_success": "All packages upgraded successfully.",
    "packages_upgrade_error": "Error upgrading packages.",
    "packages_autoremove_confirm": "Are you sure you want to remove unused packages?",
    "packages_autoremove_running": "Running 'apt autoremove'...",
    "packages_autoremove_success": "System cleaned up successfully.",
    "packages_autoremove_error": "Error cleaning up system.",
    "logs_menu_back": "Back",
    "packages_list_running": "Gathering list of all installed packages...",
    "packages_list_title": "All Installed Packages",
    "packages_list_error": "Could not retrieve package list.",

    "updater_new_version_found": "New version found: {version}",
    "updater_changelog_title": "Changelog",
    "updater_changelog_error": "Could not fetch changelog.",
    "updater_prompt_update": "Do you want to update now?",
    "updater_running_pull": "Forcing update to the latest version...",
    "updater_pull_success": "Panel updated successfully!",
    "updater_pull_failed": "Failed to execute git pull. Please check for any uncommitted changes.",
    "updater_up_to_date": "You are on the latest version.",
    "updater_version_comparison": "Your version: {local} | Latest version: {remote}",
    "updater_restart_required": "Update complete. Please restart the panel to apply changes.",
    "updater_remote_error": "Could not get remote version info. Please check your internet connection.",
    "updater_local_error": "Could not determine local version. Project files may be corrupt.",

    "monitor_title": "System Monitor (like htop)",
    "monitor_htop_not_found": "htop is not found. Please install it.",

    "services_wireguard_status": "WireGuard Status",
    "services_wireguard_not_found": "WireGuard does not appear to be installed ('wg' command not found).",
    "services_wireguard_error": "Could not get WireGuard status.",

    "wg_manage_title": "Manage WireGuard",
    "wg_menu_add_client": "Add New Client",
    "wg_menu_remove_client": "Remove Client",
    "wg_prompt_select_interface": "Select WireGuard interface to manage:",
    "wg_error_no_interfaces": "No WireGuard interfaces found in /etc/wireguard.",
    "wg_prompt_client_name": "Enter client name (no spaces):",
    "wg_error_client_exists": "A client with this name already exists.",
    "wg_generating_keys": "Generating keys and configuration...",
    "wg_client_added_title": "Client Added Successfully",
    "wg_client_config_title": "Client Configuration",
    "wg_client_qr_code_title": "QR Code for Mobile App Import",
    "wg_client_config_path": "File saved to: {path}",
    "wg_prompt_remove_client": "Select client to remove:",
    "wg_error_no_clients": "No active clients found.",
    "wg_remove_confirm": "Are you sure you want to remove client {client_name}?",
    "wg_client_removed": "Client {client_name} removed successfully.",

    "main_menu_title": "Server Control Panel",
    "main_menu_subtitle": "Select an option to continue",
    "main_menu_prompt": "What would you like to do?",
    "menu_monitor": "System Monitor",
    "menu_network_info": "Network Tools",
    "menu_exit": "Exit",
    "services_menu_list_all": "List all services",
    "services_menu_back": "Back",
    "firewall_iptables_error": "Could not get iptables rules. Make sure it's installed and you have permissions.",
    "firewall_ufw_not_installed": "UFW (Uncomplicated Firewall) is not installed.\nIt is the recommended firewall for Debian/Ubuntu.\n\nPlease install it with: [cyan]sudo apt install ufw[/cyan]\nAnd enable it with: [cyan]sudo ufw enable[/cyan]",
    "firewall_ufw_not_active": "UFW (Uncomplicated Firewall) is not active.\nIt is recommended to enable it for basic protection.\n\nPlease enable it with: [cyan]sudo ufw enable[/cyan]",
    "firewall_current_status": "Current UFW Status",
    "firewall_status_error": "Could not get UFW status: {error}",
    "firewall_action_prompt": "Select an action:",
    "firewall_menu_enable": "Enable UFW",
    "firewall_menu_disable": "Disable UFW",
    "firewall_menu_add": "Add rule (e.g., 'allow 22/tcp')",
    "firewall_menu_delete": "Delete rule (e.g., 'delete allow 22/tcp')",
    "firewall_add_prompt": "Enter rule to add:",
    "firewall_delete_prompt": "Enter rule to delete:",

    "network_toolkit_title": "Network Toolkit",
    "user_manager_title": "User Manager",
    "firewall_iptables_active_panel": "Active iptables firewall detected",
    "updater_insecure_warning": "WARNING: SSL verification is disabled to bypass certificate issues.",
    "wg_prompt_client_name": "Enter client name (no spaces):",
    "wg_error_client_exists": "A client with this name already exists.",
    "wg_generating_keys": "Generating keys and configuration...",
    "wg_client_added_title": "Client Added Successfully",
    "wg_client_config_title": "Client Configuration",
    "wg_client_qr_code_title": "QR Code for Mobile App Import",
    "wg_client_config_path": "File saved to: {path}",
    "wg_prompt_remove_client": "Select client to remove:",
    "wg_error_no_clients": "No active clients found.",
    "wg_remove_confirm": "Are you sure you want to remove client {client_name}?",
    "wg_client_removed": "Client {client_name} removed successfully.",
    "wg_error_no_interfaces": "No WireGuard interfaces found in /etc/wireguard.",
    "wg_prompt_select_interface": "Select a WireGuard interface to manage:",
    "wg_menu_list_clients": "List Clients",
    "wg_client_list_title": "WireGuard Client List",
    "wg_col_client_name": "Client Name",
    "wg_col_public_key": "Public Key",
    "wg_col_ip": "Assigned IP",
    "wg_prompt_select_client": "Select a client to see details:",
    "wg_client_details_title": "Client Details: {client_name}",
    "wg_menu_show_config": "Show Config",
    "wg_menu_show_qr": "Show QR Code",

    "user_menu_list_users": "List Users",
    "user_menu_add_user": "Add New User",
    "user_menu_delete_user": "Delete User",
    "user_action_prompt": "Select an action:",
    "user_table_title": "System Users (UID >= 1000)",
    "user_delete_prompt": "Which user do you want to delete?",

    "firewall_title": "Firewall Manager",

    "firewall_select_prompt": "Multiple firewalls detected.",
    "firewall_select_prompt_long": "Which firewall would you like to manage?",
    "firewall_no_firewall_found": "Neither UFW nor iptables could be found.",
    "firewall_ufw_title": "UFW Management",
    "firewall_menu_enable_prompt": "UFW is inactive. Do you want to enable it now?",
    "firewall_ufw_disabled": "UFW has been disabled.",
    "firewall_iptables_title": "iptables Rules (Read-Only)",
    "firewall_iptables_readonly": "Managing iptables is not supported via this interface due to its complexity.",

    "executing_command": "Executing command: {command}",
    "command_output": "Output:",
    "command_error": "Error:",
    "press_any_key": "Press any key to continue...",

    "web_server_create_nextjs_site": "Create Next.js (Node.js) site",
    "create_nextjs_site_title": "Creating and deploying a Next.js site",
    "missing_dependencies_nextjs": "Missing required dependencies: {deps}.",
    "please_install_and_retry": "Please install them and try again.",
    "enter_project_name_nextjs": "Enter the project name (for directory and PM2):",
    "enter_port_nextjs": "Enter the port for the Next.js application to run on:",
    "creating_nextjs_app": "Creating Next.js application at {path}...",
    "nextjs_app_created_successfully": "Next.js application created successfully.",
    "error_creating_nextjs_app": "Error creating Next.js application: {error}",
    "building_nextjs_app": "Building Next.js application for production...",
    "starting_app_with_pm2": "Starting application with PM2...",
    "error_building_or_starting_app": "Error building or starting application: {error}",
    "nextjs_site_deployed_successfully": "Next.js site {domain} deployed successfully!",
    
    "web_server_create_php_site": "Create PHP site",
    "create_php_site_title": "Creating a new PHP site",
    "php_fpm_not_installed": "PHP-FPM not found. It is required to process PHP scripts.",
    "install_php_fpm_prompt": "Would you like to install PHP-FPM now?",
    "php_fpm_socket_not_found_after_install": "Could not find PHP-FPM socket after installation. Check the 'php-fpm' service status.",
    "php_site_created_successfully": "PHP site {domain} created successfully!",

    "web_server_manage_ssl": "Manage SSL Certificates",
    "ask_install_ssl": "Would you like to get a free SSL certificate from Let's Encrypt for {domain}?",
    "certbot_not_installed": "Certbot is not installed. It is required for SSL management.",
    "install_certbot_prompt": "Would you like to install Certbot and its Nginx plugin?",
    "running_certbot": "Running Certbot for domain {domain}...",
    "enter_email_for_ssl": "Enter your email (used for renewal and security notices):",
    "ssl_installed_successfully": "SSL certificate for {domain} installed successfully!",
    "ssl_installation_failed": "SSL certificate installation failed: {error}",
    "ssl_manager_title": "SSL Certificate Manager (Certbot)",
    "certbot_required_for_ssl": "Certbot is required for this feature.",
    "ssl_menu_list": "List existing certificates",
    "ssl_menu_renew": "Check/Renew certificates (dry run)",
    "ssl_menu_prompt": "Select an action:",
    "listing_certificates": "Listing your certificates...",
    "renewing_certificates": "Performing a dry run for renewal...",

    "select_web_server_to_manage": "Which web server do you want to manage?",
    "no_web_server_installed": "Neither Nginx nor Apache are installed. Please install one.",
    "web_server_manager_title_nginx": "Web Server Manager (Nginx)",
    "web_server_manager_title_apache": "Web Server Manager (Apache)",
    "creating_apache_config": "Creating Apache config at {path}...",
    "apache_config_created": "Apache config created and site enabled.",
    "error_creating_apache_config": "Error creating Apache config: {error}",
    "reloading_apache": "Reloading Apache...",
    "error_reloading_apache": "Error reloading Apache: {error}",
    "feature_coming_soon": "Feature '{feature}' is coming soon!",
    "enabling_apache_mod": "Enabling required Apache mod: {mod}",

    "web_server_manage_sites": "Manage Sites",
    "manage_sites_title": "Manage Existing Sites",
    "error_listing_sites_dir_not_found": "Could not find sites directory: {dir}",
    "no_sites_found": "No active sites found.",
    "select_site_to_manage": "Select a site to manage:",
    "what_to_do_with_site": "What to do with {site}?",
    "delete_site": "Delete Site",
    "confirm_delete_site": "Are you sure you want to permanently delete the site {site}? This action cannot be undone.",
    "deleting_site": "Deleting site {site}...",
    "site_disabled_and_config_removed": "Site disabled and configuration file removed.",
    "confirm_delete_web_root": "Also delete the web root directory at {path}?",
    "web_root_deleted": "Web root directory deleted.",
    "confirm_revoke_ssl": "Revoke and delete the SSL certificate for {domain}?",
    "ssl_revoked": "SSL certificate has been revoked.",
    "site_deleted_successfully": "Site {site} deleted successfully.",
    "error_deleting_site": "An error occurred while deleting the site: {error}",
    "back": "Back",

    "menu_backup_manager": "Backup Manager",
    "backup_manager_title": "Backup Manager",
    "backup_menu_prompt": "What would you like to do?",
    "backup_menu_create": "Create a new backup",
    "backup_menu_list": "List existing backups",
    "backup_type_prompt": "Select backup type:",
    "backup_type_files": "Files / Directory",
    "backup_type_mysql": "MySQL Database",
    "backup_dir_prompt": "Enter the directory to save backups to:",
    "creating_backup_dir": "Creating backup directory: {dir}",
    "backup_source_path_prompt": "Enter the full path to the file or directory to back up:",
    "invalid_source_path": "Invalid path or path does not exist.",
    "creating_archive": "Creating archive: {dest}...",
    "backup_created_successfully": "Backup created successfully: {path}",
    "error_creating_backup": "Error creating backup: {error}",
    "mysqldump_not_found": "'mysqldump' command not found. Make sure the MySQL client is installed.",
    "error_listing_databases": "Could not list databases: {error}",
    "mysql_auth_tip": "Hint: Ensure you have passwordless MySQL access for root (e.g., via ~/.my.cnf) or that the 'mysql' command does not prompt for a password.",
    "no_databases_found": "No databases found to back up.",
    "all_databases": "All databases",
    "select_database_to_backup": "Select a database to back up:",
    "creating_db_dump": "Creating database dump: {dest}...",
    "backup_dir_prompt_list": "Enter the directory where backups are stored:",
    "backup_dir_not_found": "Backup directory not found: {dir}",
    "no_backups_found": "No backups found in {dir}.",
    "backups_in_dir": "Backups in {dir}",
    "error_listing_backups": "Error listing backups: {error}"
}