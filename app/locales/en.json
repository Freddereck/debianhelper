{
    "lang_code": "en",
    "main_menu_title": "Server Panel Main Menu",
    "main_menu_prompt": "What do you want to do?",
    "menu_choice_1": "Manage Software",
    "menu_choice_2": "Manage Services",
    "menu_choice_3": "System Health",
    "menu_choice_4": "Network Tools",
    "menu_choice_5": "Firewall",
    "menu_choice_6": "User Management",
    "menu_choice_7": "System Logs",
    "menu_choice_8": "Scheduled Tasks (Cron)",
    "menu_choice_9": "Backup Manager",
    "menu_choice_10": "Developer Tools",
    "menu_choice_11": "Autostart Manager",
    "menu_choice_12": "Web Server Manager",
    "exit": "Exit",
    "back": "Back",
    "back_to_main_menu": "Back to Main Menu",
    "feature_not_implemented_yet": "This feature is not yet implemented.",
    "press_any_key": "Press any key to continue...",
    "press_any_key_to_continue": "Press any key to continue...",
    "operation_cancelled": "Operation cancelled.",
    "error_occurred": "An error occurred: {error}",
    "invalid_choice": "Invalid choice, please try again.",
    "status_active": "Active (Running)",
    "status_inactive": "Inactive (Dead)",
    "status_failed": "Failed",
    "status_unknown": "Unknown",
    "prompt_action": "Select an action",
    "service_menu_start": "Start",
    "service_menu_stop": "Stop",
    "service_menu_restart": "Restart",
    "service_menu_reload": "Reload",
    "service_menu_status": "View Status",
    "installing_package": "Installing {package}...",
    "package_installed_successfully": "{package} installed successfully.",
    "uninstalling_package": "Uninstalling {package}...",
    "package_uninstalled_successfully": "{package} uninstalled successfully.",
    "uninstall_confirm_question": "Are you sure you want to uninstall {package}?",
    "uninstall": "Uninstall",
    "manage": "Manage",
    "install": "Install",
    "service_restarted_successfully": "{service} restarted successfully.",
    "service_reloaded_successfully": "{service} reloaded successfully.",
    "what_to_do": "What would you like to do?",

    "software_manager_title": "Software Manager",
    "software_manager_prompt": "Select a package to manage or install:",
    "gathering_versions_status": "Gathering installed package versions...",
    "management": "Management",

    "nginx_menu_list_sites": "List configured sites",
    "nginx_menu_status": "View Nginx status",
    "nginx_menu_test_config": "Test Nginx configuration",
    "nginx_menu_reload": "Reload Nginx",
    "nginx_menu_restart": "Restart Nginx",
    "nginx_listing_sites": "Listing enabled sites",
    "nginx_no_sites_found": "No enabled sites found.",
    "error_listing_sites": "Error listing sites: {error}",
    "nginx_sites_enabled_not_found": "Directory not found: {path}",

    "mysql_menu_list_db": "List databases",
    "mysql_menu_status": "View MySQL status",
    "mysql_menu_secure": "Run mysql_secure_installation",
    "mysql_listing_databases": "Listing MySQL databases...",
    "mysql_secure_manual_follow": "Please follow the on-screen instructions.",

    "postgresql_menu_list_db": "List databases",
    "postgresql_listing_databases": "Listing PostgreSQL databases...",

    "certbot_nginx_required": "Certbot management requires Nginx to be installed.",
    "certbot_menu_get_cert": "Get a new certificate",
    "cert_menu_test_renewal": "Test automatic renewal",
    "certbot_get_cert_instructions": "Launching Certbot. Please follow the interactive prompts.",
    "certbot_testing_renewal": "Performing a dry run of the renewal process...",
    "certbot_menu_list_certs": "List existing certificates",
    "certbot_listing_certs": "Fetching list of certificates...",

    "fail2ban_menu_list_jails": "List active jails",
    "fail2ban_menu_unban_ip": "Unban an IP Address",
    "fail2ban_listing_jails": "Getting Fail2Ban status...",
    "fail2ban_prompt_jail": "Enter the jail name (e.g., 'sshd'):",
    "fail2ban_prompt_ip": "Enter the IP address to unban:",
    "fail2ban_unbanning_ip": "Unbanning {ip} from {jail}...",

    "wg_error_no_interfaces": "No WireGuard interfaces found in /etc/wireguard.",
    "wg_prompt_select_interface": "Select a WireGuard interface to manage:",
    "wg_manage_title": "Manage WireGuard Interface",
    "wg_menu_list_clients": "List / Manage Clients",
    "wg_menu_add_client": "Add New Client",
    "wg_menu_remove_client": "Remove a Client",
    "wg_error_no_clients": "No clients found for this interface.",
    "wg_prompt_client_name": "Enter a name for the new client:",
    "wg_error_client_exists": "A client configuration with that name already exists.",
    "wg_generating_keys": "Generating client keys...",
    "wg_client_added_title": "Client Added Successfully",
    "wg_client_config_title": "Client Configuration File",
    "wg_client_config_path": "Configuration saved to: {path}",
    "wg_client_qr_code_title": "QR Code for Mobile App",
    "wg_client_list_title": "WireGuard Clients",
    "wg_col_client_name": "Client Name",
    "wg_col_public_key": "Public Key",
    "wg_col_ip": "Allowed IP",
    "wg_prompt_select_client": "Select a client to manage (or 'Back'):",
    "wg_client_details_title": "Managing Client: {client_name}",
    "wg_menu_show_config": "Show Config Text",
    "wg_menu_show_qr": "Show QR Code",
    "wg_prompt_remove_client": "Select a client to remove:",
    "wg_remove_confirm": "Are you sure you want to remove client {client_name}?",
    "wg_client_removed": "Client {client_name} has been removed.",
    
    "webmin_manage_title": "Webmin Management",
    "webmin_access_url": "Access URL: https://{ip}:10000",
    "webmin_install_wizard_title": "Webmin Installation Wizard",
    "webmin_install_prompt": "This will download and run the official Webmin repository setup script. This is required for installation. Continue?",
    "webmin_downloading_script": "Downloading setup script...",
    "webmin_running_script": "Running repository setup script (may ask for password)...",
    "webmin_cleaning_up": "Cleaning up...",
    "repo_setup_success": "Repository setup complete.",
    "webmin_access_info": "Webmin installed successfully!\\nAccess it at: https://{ip}:10000",
    "invalid_action_error": "Error: Invalid action '{action}' for software '{software}'.",

    "nextcloud_wizard_title": "Nextcloud Installation Wizard (Coming Soon)",
    "pma_installer_title": "PHPMyAdmin Installer (for Nginx)",
    "pma_error_deps_met": "Error: Dependencies not met.",
    "pma_error_no_nginx": "- Nginx is not installed or not in PATH.",
    "pma_error_no_php": "- PHP-FPM is not installed or not in PATH.",
    "pma_error_deps_instructions": "Please install and configure Nginx and PHP-FPM before running this installer.",
    "pma_installing": "Installing phpmyadmin and dependencies ({php_deps})...",
    "pma_install_finished": "PHPMyAdmin has been installed.",
    "pma_info_configure_nginx": "Now, you need to configure Nginx.",
    "pma_info_action_required": "ACTION REQUIRED: Add the relevant location block to your Nginx server block.",

    "running_external_script": "Running external installation script. Please follow any prompts.",
    "launching_interactive_tool": "Launching interactive tool: {tool}...",
    "press_any_key_after_exit": "Press any key to continue after exiting the tool...",

    "select_web_server_to_manage": "Which web server do you want to manage?",
    "no_web_server_installed": "Neither Nginx nor Apache are installed.",
    "install_nginx_prompt": "Would you like to install Nginx now? (Recommended)",
    "installing_tool": "Installing {tool}...",
    "tool_installed_successfully": "{tool} installed successfully.",
    "tool_installation_failed": "Failed to install {tool}: {error}",

    "web_server_manager_title_nginx": "Web Server Manager (Nginx)",
    "web_server_manager_title_apache": "Web Server Manager (Apache)",
    "web_server_menu_prompt": "Select an action",
    "web_server_create_site": "Create new static site",
    "web_server_create_from_git": "Create site from Git repo",
    "web_server_create_php_site": "Create PHP site",
    "web_server_create_nextjs_site": "Create Next.js site",
    "web_server_manage_sites": "Manage Sites",
    "web_server_manage_ssl": "Manage SSL (Certbot)",

    "create_from_git_title": "Create Site from Git Repository",
    "git_not_installed_error": "Error: 'git' is not installed.",
    "git_install_prompt": "Do you want to install git now?",
    "git_repo_url_prompt": "Enter the Git repository URL:",
    "git_cloning_repo": "Cloning repository {url} into {path}...",
    "git_clone_success": "Repository cloned successfully.",
    "git_clone_failed": "Failed to clone repository: {error}",

    "deploy_docker_title": "Deploy Docker Project",
    "docker_compose_building": "Building and running services with docker-compose...",
    "docker_building_image": "Building Docker image...",
    "docker_ask_internal_port": "What port does your application use INSIDE the container? (e.g., 80, 3000)",
    "docker_running_container": "Running container {image} with port mapping {port}...",
    "docker_deploy_success": "Docker project deployed successfully.",
    "docker_deploy_failed": "Failed to deploy Docker project: {error}",
    "docker_ask_proxy_port": "What host (localhost) port should be proxied? (e.g., 8000, 3000)",

    "enter_domain_name": "Enter the domain name (e.g., example.com):",
    "creating_nginx_config": "Creating Nginx config at {path}...",
    "nginx_config_created": "Nginx config created and site enabled.",
    "error_creating_nginx_config": "Error creating Nginx config: {error}",
    "testing_nginx_config": "Testing Nginx configuration...",
    "site_created_successfully": "Site {domain} created successfully!",
    "error_reloading_nginx": "Error testing or reloading Nginx: {error}",
    
    "create_nextjs_site_title": "Create & Deploy a Next.js Site",
    "missing_dependencies_nextjs": "Missing required dependencies: {deps}.",
    "please_install_and_retry": "Please install them and try again.",
    "enter_project_name_nextjs": "Enter the project name (for directory and PM2):",
    "enter_port_nextjs": "Enter the port for the Next.js app to run on:",
    "creating_nextjs_app": "Creating Next.js application at {path}...",
    "nextjs_app_created_successfully": "Next.js application created successfully.",
    "error_creating_nextjs_app": "Error creating Next.js application: {error}",
    "building_nextjs_app": "Building Next.js application for production...",
    "starting_app_with_pm2": "Starting application with PM2...",
    "error_building_or_starting_app": "Error building or starting application: {error}",

    "create_php_site_title": "Create New PHP Site",
    "dependency_not_found_php_fpm": "Dependency not found: php-fpm is required but not installed.",
    
    "creating_apache_config": "Creating Apache config at {path}...",
    "error_reloading_apache": "Error reloading Apache: {error}",

    "ask_install_ssl": "Would you like to get a free SSL certificate from Let's Encrypt for {domain}?",
    "certbot_not_installed": "Certbot is not installed. It is required for SSL management.",
    "install_certbot_prompt": "Would you like to install Certbot and its Nginx plugin?",
    "running_certbot": "Running Certbot for domain {domain}...",
    "ssl_installed_successfully": "SSL certificate for {domain} installed successfully!",
    "ssl_installation_failed": "SSL certificate installation failed: {error}",
    "manage_ssl_title": "Manage SSL Certificates (Certbot)",
    "certbot_required_for_ssl": "Certbot is required for this feature.",

    "manage_sites_title": "Manage Existing Sites",
    "error_listing_sites_dir_not_found": "Could not find sites directory: {dir}",
    "no_sites_found": "No active sites found.",
    "select_site_to_manage": "Select a site to manage:",
    "what_to_do_with_site": "What to do with {site}?",
    "delete_site": "Delete Site",
    "confirm_delete_site": "Are you sure you want to permanently delete the site {site}? This includes the web server config, and you will be prompted to delete the web root and SSL certificate. This action cannot be undone.",
    "deleting_site": "Deleting site {site}...",
    "site_disabled_and_config_removed": "Site disabled and configuration file removed.",
    "confirm_delete_web_root": "Also delete the web root directory at {path}?",
    "web_root_deleted": "Web root directory deleted.",
    "confirm_revoke_ssl": "Revoke and delete the SSL certificate for {domain}?",
    "ssl_revoked": "SSL certificate has been revoked.",
    "site_deleted_successfully": "Site {site} deleted successfully.",
    "error_deleting_site": "An error occurred while deleting the site: {error}",

    "dependency_not_found": "Dependency not found: {tool} is required but not installed.",
    "pm2_install_prompt": "PM2 is required to manage Node.js processes. Install it globally now?",
    "error_starting_app": "Error starting application with PM2: {error}",
    "installing_npm_deps": "Installing npm dependencies in {web_root}...",
    "building_npm_app": "Building app with 'npm run build' in {web_root}...",
    "error_npm_build": "Error installing dependencies or building the application: {error}",
    
    "web_root_not_found_or_not_specified": "Web root directory not found or not specified in config.",
    "warning_could_not_read_config": "Warning: Could not read site configuration file at {path}. Metadata may be missing. Error: {error}",
    "deleting_pm2_process": "Stopping and deleting PM2 process: {name}...",
    "coming_soon": "Coming Soon",
    "create_static_site_title": "Create New Static Site",
    "creating_web_root": "Creating web root at: {path}..."
}